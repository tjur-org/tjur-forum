name: CI

on:
  pull_request: {}

concurrency:
  group: pr-${{ github.event.number }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.10"
  DOCKER_IMAGE_REPO: ghcr.io/tjur-org/tjur-forum:pr-${{ github.event.number }}
  DOCKER_IMAGE_TAG: pr-${{ github.event.number }}
  DOCKER_IMAGE: ${{ env.DOCKER_IMAGE_REPO }}:${{ env.DOCKER_IMAGE_TAG }}
  DOCKER_IMAGE_CACHE: ${{ env.DOCKER_IMAGE_REPO }}:cache

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/bake-action@v2
        with:
          files: "docker-bake.hcl"
          targets: "runtime-test"
          push: true
          set: |
            *.cache-from=type=registry,ref=${{ env.DOCKER_CACHE_TAG }}
            runtime-test.tags=${{ env.DOCKER_IMAGE }}

  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - run: |
          docker-compose -f docker-compose.test.yml run test

  mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Mypy cache
        uses: actions/cache@v3
        with:
          path: .mypy_cache
          key: ${{ runner.os }}-mypy
          restore-keys: |
            ${{ runner.os }}-mypy

      - name: Pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-mypy-${{ hashFiles('reqs/*requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-mypy-

      - name: Run mypy
        run: |
          pip install -r reqs/requirements.txt -r reqs/dev-requirements.txt
          mypy

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - uses: pre-commit/action@v3.0.0
